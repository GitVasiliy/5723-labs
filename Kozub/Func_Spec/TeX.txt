\documentclass[a4paper,14pt]{extarticle} %размер бумаги устанавливаем А4, шрифт 14пунктов
\usepackage[T2A]{fontenc}
\usepackage[utf8]{inputenc}%включаем свою кодировку: koi8-r или utf8 в UNIX, cp1251 в Windows
\usepackage[english,russian]{babel}%используем русский и английский языки с переносами
\usepackage{amssymb,amsfonts,amsmath,mathtext,cite,enumerate,float} %подключаем нужные пакеты расширений

\usepackage{alltt}
\usepackage{fancyvrb}
%шрифт Times New Roman
%\usepackage{fontspec}
%\setmainfont{Times New Roman}
%\setallmainfonts{Times New Roman}

\usepackage{titlesec}

\makeatletter
\renewcommand{\@biblabel}[1]{#1.} % Заменяем библиографию с квадратных скобок на точку:
\makeatother

\usepackage{geometry} % Меняем поля страницы
\geometry{left=3cm}% левое поле
\geometry{right=15mm}% правое поле
\geometry{top=2cm}% верхнее поле
\geometry{bottom=2cm}% нижнее поле
\linespread{1.5}

\usepackage{indentfirst} % отделять первую строку раздела абзацным отступом
\setlength\parindent{5ex}
\usepackage{tikz}
\usepackage{pgfplots}
%links
\usepackage{url}

\usepackage[tableposition=top,singlelinecheck=false, justification=centering]{caption}
\usepackage{subcaption}

% маркированные списки
\renewcommand{\labelitemi}{--}
\renewcommand{\labelitemii}{--}
% нумерованные списки
\renewcommand{\labelenumi}{\asbuk{enumi})}
\renewcommand{\labelenumii}{\arabic{enumii})}

% номер сноски со скобкой
\renewcommand*{\thefootnote}{\arabic{footnote})}
\renewcommand{\footnoterule}{%
\kern -3pt
\hrule width 40mm height .4pt
\kern 2.6pt
}

%иллюстрации и таблицы
\DeclareCaptionLabelFormat{gostfigure}{Рисунок #2}
\DeclareCaptionLabelFormat{gosttable}{Таблица #2}
\DeclareCaptionLabelSeparator{gost}{~---~}
\captionsetup{labelsep=gost}
\captionsetup*[figure]{labelformat=gostfigure}
\captionsetup*[table]{labelformat=gosttable}
\renewcommand{\thesubfigure}{\asbuk{subfigure}}

\usepackage{tocloft}
\renewcommand{\cftsecleader}{\cftdotfill{\cftdotsep}}
%\renewcommand{\cfttoctitlefont}{\Large\filcenter}
%\setcounter{page}{3} %нумерация страниц с 3

\usepackage{listings}
\lstset{
frame=single,
breaklines=true
}
\author{И.А.Козуб}
\title{Paper.io}
\begin{document}
\begin{titlepage}
\begin{center}

ГУАП\\
КАФЕДРА № 51\\
\vspace{2cm}

\begin{flushleft}
ПРЕПОДАВАТЕЛЬ
\begin{tabular}{|l|l|l|}
\hline
доц., канд. техн. наук & & Е.М. Линский\\
\hline
должность, уч. степень, звание & подпись, дата & инициалы, фамилия\\
\hline
\end{tabular}
\end{flushleft}

\vspace{3cm}

{\Large СПЕЦИФИКАЦИЯ\\}
\vspace{0.3cm}
{\Large СЕТЕВАЯ ИГРА PAPER.IO}

\vspace{0.7cm}

\begin{flushleft}
по курсу: ТЕХНОЛОГИИ ПРОГРАММИРОВАНИЯ
\end{flushleft}

\vspace{5cm}

\begin{flushleft}
РАБОТУ ВЫПОЛНИЛ
\begin{tabular}{|l|l|l|}
\hline
СТУДЕНТ ГР. № 5723 & & И. А. Козуб\\
\hline
& подпись, дата & инициалы, фамилия\\
\hline
\end{tabular}
\end{flushleft}

\vspace{2cm}

Санкт-Петербург 2019

\end{center}
\end{titlepage}
\renewcommand{\chaptername}{Раздел}
\renewcommand{\figurename}{Рисунок}

\begin{center}
\huge \bf Paper.io
\end{center}

\setcounter{page}{2}
\section*{Содержание}
\begin{flushleft}
1. Функциональная спецификация............................................2\\
2. Руководство пользователя.....................................................3\\
3. Архитектура программы.......................................................6\\
4. Особенности реализации.......................................................6\\
5. Задачи участников проекта..................................................8\\
\end{flushleft}

\newpage
\section*{1. Функциональная спецификация}
Многопользовательская игра «Paper.io» создана для игры в нее двух игроков с разных компьютеров. Цель этой игры – захватить всю территорию, сделать это можно двумя способами, в зависимости от стратегии, избранной игроком. 
\begin{itemize}
\item{заполучив все свободные клетки}
\item{убив своего соперника}
\end{itemize}
Программа имеет графический интерфейс, который однозначно отображает игровую ситуацию у обоих игроков. 
\section*{2. Руководство пользователя}
Игрок заходит на сервер, запускается графический интерфейс, когда игрок будет готов начать игру, он нажмет кнопку «Играть».
После этого необходимо дождаться готовности другого игрока.
Как только оба игрока будут готовы, игра будет запущена со стартовых позиций.
\begin{itemize} 
\item Параметры игрового поля: 
\end{itemize}
Поле имеет размеры 50х50 клеток, игрок (1х1) перемещается по ним при помощи клавиш (4 направления). Стартовые позиции игроков располагаются в диагонально противоположных углах игрового поля.  Стартовая территория каждого игрока представляет собой квадрат (2х2) оттенка, соответствующего цвету самого игрока. 
При запуске игры, каждый игрок автоматически начнёт движение по горизонтали, в направлении к сопернику.
\section*{Правила игры}
\centering Стартовое поле игры. На поле два игрока (темные квадраты) и их территории.
\begin{figure}[h!]
\centering
\includegraphics[scale=1]{1.jpg}
%\caption{The Universe}
\label{fig:universe}
\end{figure}

\centering Игроки начинают свое движение. За игроком вне его территории следует «хвост». На данном этапе, задача игрока – вернуться на свою территорию.
\begin{figure}[h!]
\centering
\includegraphics[scale=1]{2.jpg}
%\caption{The Universe}
\label{fig:universe}
\end{figure}

\centering Вернувшись на свою территорию, игрок захватывает территорию, окруженную его хвостом.
\begin{figure}[h!]
\centering
\includegraphics[scale=1]{3.jpg}
%\caption{The Universe}
\label{fig:universe}
\end{figure}

\centering Так же, как и нейтральную, можно захватывать территорию соперника.

\centering Игрок может погибнуть в двух случаях:
1) Если он наступил на свой собственный хвост.
\begin{figure}[h!]
\centering
\includegraphics[scale=0.25]{5.jpg}
%\caption{The Universe}
\label{fig:universe}
\end{figure}

\centering 2) Если он не успел вернуться на свою территорию, и на его хвост наступил другой игрок (убил).

\begin{figure}[h!]
\centering
\includegraphics[scale=1.2]{6.jpg}
%\caption{The Universe}
\label{fig:universe}
\end{figure}



\newpage


\begin{flushleft}
\section*{3. Архитектура программы}
Программа состоит из основных частей:
UDP-server – сервер, на который будут отсылаться изменения, созданные игроками за определенный интервал времени.
Graphics – графический интерфейс, в основе которого лежат методы Java Swing.
Game – основная логика игры, которая принимает команды от игроков, отправляет изменения на сервер и принимает их, а так же отправляет их на отрисовку в графический интерфейс.
\section*{4. Особенности реализации}
Основным классом в программе является класс Game, который занимается формированием пакетов данных, полученных непосредственно от пользователей, отправкой этих данных на сервер, получением новых пакетов данных с сервера, и отправкой полученной информации в графический интерфейс.\\
\begin{itemize} 
\item public Game() – конструктор, который формирует стартовое поле игры, позиции игроков. 
\end{itemize}
Также имеет важные методы:
\begin{itemize}
\item public sendChanges(Changes s) – Отправляет пакеты изменений игрового поля на сервер, произошедшие со стороны каждого игрока за определенный интервал времени.
\item public getChanges () – получает пакеты информации с сервера.
\item public show() – вызывает методы графического интерфейса для отрисовки полученный изменений на экранах игроков.
\end{itemize}

Сам сервер реализуется при помощи класса udpServer. Он необходим, чтобы игроки могли обмениваться изменениями, которые произошли за определенный интервал времени со стороны каждого пользователя. Содержит следующие методы:
\begin{itemize}
\item public combine( package p1, package p2) – объединяет в один пакет информацию, полученную от обоих игроков.
\item public sendUsers () – отправляет одинаковую информацию каждому игроку.
\end{itemize}

Graphics – отвечает за визуальную составляющую программы. Наследуется от методов и классов JavaSwing. Имеет следующие методы:
\begin{itemize}
\item public menu() – отрисовывает меню, с которого игроки запускают игру.
\item public startPosition() – отрисовывает стартовую позицию игры.
\item public drawChenges() – отображает изменения, полученные с сервера у каждого игрока.
\end{itemize}
\end{flushleft}




\newpage
\begin{flushleft}
\section*{5. Задачи участников проекта}
Чернышкова Ольга – основная логика программы, формирование пакетов.\\
Козуб Иван – настройка взаимодействия пользователей части клиент-сервер, графический интерфейс.

\end{flushleft}
\end{document}